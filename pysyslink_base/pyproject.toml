[build-system]
requires = ["scikit-build-core>=0.3.3", "nanobind", "cmake==3.28", "ninja"]
build-backend = "scikit_build_core.build"



[project]
name = "pysyslink_base"
version = "0.1.0"
description="pysyslink-base, example of bindings with litgen"
readme = "README.md"
authors = [ { name = "My Name", email = "me@email.com" } ]
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "numpy","nanobind",
]

[project.optional-dependencies]
test = ["pytest"]


[tool.scikit-build]
wheel.expand-macos-universal-tags = true
wheel.packages = ["_stubs/pysyslink_base"]


[tool.cibuildwheel]

manylinux-x86_64-image = "manylinux_2_28"

before-build = """
if   command -v yum  &> /dev/null; then
  yum install -y boost-devel hdf5-devel
elif command -v apk  &> /dev/null; then
  apk add --no-cache boost-dev hdf5-dev
elif command -v apt-get &> /dev/null; then
  apt-get update && apt-get install -y libboost-all-dev libhdf5-dev
elif command -v brew &> /dev/null; then
  brew update && brew install boost hdf5
elif [ \"$CIBW_PLATFORM\" = \"windows\" ]; then
  choco install -y boost-msvc-14.1
fi
"""

# Set this to make sure Python-installed CMake is used
environment = { PATH = "$HOME/.local/bin:$PATH" }

# Target python versions:
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]
skip = [
  "*-manylinux_i686",
  "*-win32",
  "*-win_amd64",
  "*-macosx_*",
]


build-verbosity = 1


#test-command = "pytest {project}/tests"
#test-extras = ["test"]
#test-skip = ["*universal2:arm64"]
